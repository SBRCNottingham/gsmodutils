from __future__ import print_function
import os
from gsmodutils.project import Project

# load the gsmodutils project file
project = Project(os.path.pardir)

substrates = json.load(open(substrates_config))
carbon_sources = substrates['carbon_sources']


# Merge carbon sources and media conditions for all tested growth conditions
all_growth = dict()

for cs, infd in substrates['carbon_sources'].items():
    
    for cname, medium in substrates['growth_conditions'].items():
        
        if cname in infd["growth_conditions"] + infd["no_growth_conditions"]:
            gmedia = medium.copy()
            gmedia[infd["transporter"]] = infd["uptake"] # TODO set uptake rates in database
            
            test_pathways = []
            # Checks to see if pathways are included.
            if 'pathways' in  infd:
                for pathway in infd['pathways']:
                    if pathway in infd['pathways']:
                        test_pathways.append( (pathway, substrates['pathways'][pathway]) )
            
            nname = "{0} {1}".format(cs, cname)
            all_growth[nname] = dict(
                carbon_source=cs,
                grows= cname in infd["growth_conditions"], # TODO set growth conditions and negative conditions
                media=gmedia,
                pathways=test_pathways
                


def test_designs(model, design):
    '''
    Ensures that a given model change does not break a pre existing design - flags failure if it does
    '''
    pass
